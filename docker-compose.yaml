version: "3.9"
services:
#  mysqldb:
#    container_name: ledger-mysqldb
#    image: mysql:8.0.37
#    command: --authentication-policy=caching_sha2_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
#    environment:
#      MYSQL_DATABASE: ledger_db
#      MYSQL_ROOT_PASSWORD: adm1n
#      MYSQL_USER: ledger_user
#      MYSQL_PASSWORD: passw0rd
#    ports:
#      - '3307:3306'
#    volumes:
#      - "./mysql/scripts/V1_0_0__create_schema.sql:/docker-entrypoint-initdb.d/V1_0_0__create_schema.sql"
#      - ./mysql/data:/var/lib/mysql

  postgresdb:
    container_name: ledger-postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: db_user
      POSTGRES_PASSWORD: adm1n
      POSTGRES_DB: ledger_db
      POSTGRES_HOST: 5432
    expose:
      - '5432'
    ports:
      - '5432:5432'
    volumes:
      - ./postgres/data:/var/lib/postgresql/data

  mongodb:
    image: mongo
    container_name: ledger-mongodb
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./mongo/database:/data/db
    ports:
      - 27019:27017
    restart: unless-stopped

  zoo:
    image: zookeeper:3.4.9
    hostname: zoo
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888
    volumes:
      - ./zoo/data:/data
      - ./zoo/datalog:/datalog
  kafka1:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka1
    ports:
      - "9091:9091"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - ./kafka/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo
  kafka2:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka2
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - ./kafka/kafka2/data:/var/lib/kafka/data
    depends_on:
      - zoo
  kafka3:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka3
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka3:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - ./kafka/kafka3/data:/var/lib/kafka/data
    depends_on:
      - zoo
  manager:
    image: sheepkiller/kafka-manager
    ports:
      - 9000:9000
    environment:
      - ZK_HOSTS=zoo:2181
    depends_on:
      - zoo

#  ledger-poster:
#    image: ledger-poster-app
#    container_name: ledger-poster
#    ports:
#      - "8082:8082"
##    environment:
##      - spring.datasource.url=jdbc:postgresql://localhost:5432/ledger_db
##      - spring.datasource.username=db_user
##      - spring.datasource.password=adm1n
#    depends_on:
#      - postgresdb
#      - mongodb
#    restart: always
volumes:
  data:
    driver: local